

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Sun May 09 20:01:13 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	strings,global,class=STRING,delta=2,noexec
     5                           	psect	cinit,global,class=CODE,merge=1,delta=2
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	maintext,global,class=CODE,split=1,delta=2
     8                           	psect	text1,local,class=CODE,merge=1,delta=2
     9                           	psect	text2,local,class=CODE,merge=1,delta=2,group=1
    10                           	psect	text3,local,class=CODE,merge=1,delta=2
    11                           	psect	text4,local,class=CODE,merge=1,delta=2
    12                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    13                           	dabs	1,0x7E,2
    14  0000                     
    15                           ; Version 2.20
    16                           ; Generated 12/02/2020 GMT
    17                           ; 
    18                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    19                           ; All rights reserved.
    20                           ; 
    21                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    22                           ; 
    23                           ; Redistribution and use in source and binary forms, with or without modification, are
    24                           ; permitted provided that the following conditions are met:
    25                           ; 
    26                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    27                           ;        conditions and the following disclaimer.
    28                           ; 
    29                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    30                           ;        of conditions and the following disclaimer in the documentation and/or other
    31                           ;        materials provided with the distribution.
    32                           ; 
    33                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    34                           ;        software without specific prior written permission.
    35                           ; 
    36                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    37                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    38                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    39                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    40                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    41                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    42                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    43                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    44                           ; 
    45                           ; 
    46                           ; Code-generator required, PIC16F887 Definitions
    47                           ; 
    48                           ; SFR Addresses
    49  0000                     	;# 
    50  0001                     	;# 
    51  0002                     	;# 
    52  0003                     	;# 
    53  0004                     	;# 
    54  0005                     	;# 
    55  0006                     	;# 
    56  0007                     	;# 
    57  0008                     	;# 
    58  0009                     	;# 
    59  000A                     	;# 
    60  000B                     	;# 
    61  000C                     	;# 
    62  000D                     	;# 
    63  000E                     	;# 
    64  000E                     	;# 
    65  000F                     	;# 
    66  0010                     	;# 
    67  0011                     	;# 
    68  0012                     	;# 
    69  0013                     	;# 
    70  0014                     	;# 
    71  0015                     	;# 
    72  0015                     	;# 
    73  0016                     	;# 
    74  0017                     	;# 
    75  0018                     	;# 
    76  0019                     	;# 
    77  001A                     	;# 
    78  001B                     	;# 
    79  001B                     	;# 
    80  001C                     	;# 
    81  001D                     	;# 
    82  001E                     	;# 
    83  001F                     	;# 
    84  0081                     	;# 
    85  0085                     	;# 
    86  0086                     	;# 
    87  0087                     	;# 
    88  0088                     	;# 
    89  0089                     	;# 
    90  008C                     	;# 
    91  008D                     	;# 
    92  008E                     	;# 
    93  008F                     	;# 
    94  0090                     	;# 
    95  0091                     	;# 
    96  0092                     	;# 
    97  0093                     	;# 
    98  0093                     	;# 
    99  0093                     	;# 
   100  0094                     	;# 
   101  0095                     	;# 
   102  0096                     	;# 
   103  0097                     	;# 
   104  0098                     	;# 
   105  0099                     	;# 
   106  009A                     	;# 
   107  009B                     	;# 
   108  009C                     	;# 
   109  009D                     	;# 
   110  009E                     	;# 
   111  009F                     	;# 
   112  0105                     	;# 
   113  0107                     	;# 
   114  0108                     	;# 
   115  0109                     	;# 
   116  010C                     	;# 
   117  010C                     	;# 
   118  010D                     	;# 
   119  010E                     	;# 
   120  010F                     	;# 
   121  0185                     	;# 
   122  0187                     	;# 
   123  0188                     	;# 
   124  0189                     	;# 
   125  018C                     	;# 
   126  018D                     	;# 
   127  0000                     	;# 
   128  0001                     	;# 
   129  0002                     	;# 
   130  0003                     	;# 
   131  0004                     	;# 
   132  0005                     	;# 
   133  0006                     	;# 
   134  0007                     	;# 
   135  0008                     	;# 
   136  0009                     	;# 
   137  000A                     	;# 
   138  000B                     	;# 
   139  000C                     	;# 
   140  000D                     	;# 
   141  000E                     	;# 
   142  000E                     	;# 
   143  000F                     	;# 
   144  0010                     	;# 
   145  0011                     	;# 
   146  0012                     	;# 
   147  0013                     	;# 
   148  0014                     	;# 
   149  0015                     	;# 
   150  0015                     	;# 
   151  0016                     	;# 
   152  0017                     	;# 
   153  0018                     	;# 
   154  0019                     	;# 
   155  001A                     	;# 
   156  001B                     	;# 
   157  001B                     	;# 
   158  001C                     	;# 
   159  001D                     	;# 
   160  001E                     	;# 
   161  001F                     	;# 
   162  0081                     	;# 
   163  0085                     	;# 
   164  0086                     	;# 
   165  0087                     	;# 
   166  0088                     	;# 
   167  0089                     	;# 
   168  008C                     	;# 
   169  008D                     	;# 
   170  008E                     	;# 
   171  008F                     	;# 
   172  0090                     	;# 
   173  0091                     	;# 
   174  0092                     	;# 
   175  0093                     	;# 
   176  0093                     	;# 
   177  0093                     	;# 
   178  0094                     	;# 
   179  0095                     	;# 
   180  0096                     	;# 
   181  0097                     	;# 
   182  0098                     	;# 
   183  0099                     	;# 
   184  009A                     	;# 
   185  009B                     	;# 
   186  009C                     	;# 
   187  009D                     	;# 
   188  009E                     	;# 
   189  009F                     	;# 
   190  0105                     	;# 
   191  0107                     	;# 
   192  0108                     	;# 
   193  0109                     	;# 
   194  010C                     	;# 
   195  010C                     	;# 
   196  010D                     	;# 
   197  010E                     	;# 
   198  010F                     	;# 
   199  0185                     	;# 
   200  0187                     	;# 
   201  0188                     	;# 
   202  0189                     	;# 
   203  018C                     	;# 
   204  018D                     	;# 
   205  000C                     _PIR1bits	set	12
   206  0018                     _RCSTAbits	set	24
   207  000B                     _INTCONbits	set	11
   208  0006                     _PORTB	set	6
   209  0005                     _PORTA	set	5
   210  001A                     _RCREG	set	26
   211  0019                     _TXREG	set	25
   212  0065                     _RCIF	set	101
   213  0064                     _TXIF	set	100
   214  009A                     _SPBRGH	set	154
   215  0099                     _SPBRG	set	153
   216  0098                     _TXSTAbits	set	152
   217  008C                     _PIE1bits	set	140
   218  008F                     _OSCCONbits	set	143
   219  0086                     _TRISB	set	134
   220  0085                     _TRISA	set	133
   221  0187                     _BAUDCTLbits	set	391
   222  0189                     _ANSELH	set	393
   223  0188                     _ANSEL	set	392
   224                           
   225                           	psect	strings
   226  0003                     __pstrings:
   227  0003                     stringtab:
   228  0003                     __stringtab:
   229  0003                     stringcode:	
   230                           ;	String table - string pointers are 1 byte each
   231                           
   232  0003                     stringdir:
   233  0003  3000               	movlw	high stringdir
   234  0004  008A               	movwf	10
   235  0005  0804               	movf	4,w
   236  0006  0A84               	incf	4,f
   237  0007  0782               	addwf	2,f
   238  0008                     __stringbase:
   239  0008  3400               	retlw	0
   240  0009                     __end_of__stringtab:
   241  0009                     STR_6:
   242  0009  340D               	retlw	13
   243  000A  3420               	retlw	32	;' '
   244  000B  3449               	retlw	73	;'I'
   245  000C  346E               	retlw	110	;'n'
   246  000D  3473               	retlw	115	;'s'
   247  000E  3465               	retlw	101	;'e'
   248  000F  3472               	retlw	114	;'r'
   249  0010  3474               	retlw	116	;'t'
   250  0011  3461               	retlw	97	;'a'
   251  0012  3472               	retlw	114	;'r'
   252  0013  3420               	retlw	32	;' '
   253  0014  3463               	retlw	99	;'c'
   254  0015  3461               	retlw	97	;'a'
   255  0016  3472               	retlw	114	;'r'
   256  0017  3461               	retlw	97	;'a'
   257  0018  3463               	retlw	99	;'c'
   258  0019  3474               	retlw	116	;'t'
   259  001A  3465               	retlw	101	;'e'
   260  001B  3472               	retlw	114	;'r'
   261  001C  3420               	retlw	32	;' '
   262  001D  3470               	retlw	112	;'p'
   263  001E  3461               	retlw	97	;'a'
   264  001F  3472               	retlw	114	;'r'
   265  0020  3461               	retlw	97	;'a'
   266  0021  3420               	retlw	32	;' '
   267  0022  3464               	retlw	100	;'d'
   268  0023  3465               	retlw	101	;'e'
   269  0024  3473               	retlw	115	;'s'
   270  0025  3470               	retlw	112	;'p'
   271  0026  346C               	retlw	108	;'l'
   272  0027  3465               	retlw	101	;'e'
   273  0028  3467               	retlw	103	;'g'
   274  0029  3461               	retlw	97	;'a'
   275  002A  3472               	retlw	114	;'r'
   276  002B  3420               	retlw	32	;' '
   277  002C  3465               	retlw	101	;'e'
   278  002D  346E               	retlw	110	;'n'
   279  002E  3420               	retlw	32	;' '
   280  002F  3450               	retlw	80	;'P'
   281  0030  344F               	retlw	79	;'O'
   282  0031  3452               	retlw	82	;'R'
   283  0032  3454               	retlw	84	;'T'
   284  0033  3441               	retlw	65	;'A'
   285  0034  343A               	retlw	58	;':'
   286  0035  3420               	retlw	32	;' '
   287  0036  340D               	retlw	13
   288  0037  3400               	retlw	0
   289  0038                     STR_7:
   290  0038  340D               	retlw	13
   291  0039  3420               	retlw	32	;' '
   292  003A  3449               	retlw	73	;'I'
   293  003B  346E               	retlw	110	;'n'
   294  003C  3473               	retlw	115	;'s'
   295  003D  3465               	retlw	101	;'e'
   296  003E  3472               	retlw	114	;'r'
   297  003F  3474               	retlw	116	;'t'
   298  0040  3461               	retlw	97	;'a'
   299  0041  3472               	retlw	114	;'r'
   300  0042  3420               	retlw	32	;' '
   301  0043  3463               	retlw	99	;'c'
   302  0044  3461               	retlw	97	;'a'
   303  0045  3472               	retlw	114	;'r'
   304  0046  3461               	retlw	97	;'a'
   305  0047  3463               	retlw	99	;'c'
   306  0048  3474               	retlw	116	;'t'
   307  0049  3465               	retlw	101	;'e'
   308  004A  3472               	retlw	114	;'r'
   309  004B  3420               	retlw	32	;' '
   310  004C  3470               	retlw	112	;'p'
   311  004D  3461               	retlw	97	;'a'
   312  004E  3472               	retlw	114	;'r'
   313  004F  3461               	retlw	97	;'a'
   314  0050  3420               	retlw	32	;' '
   315  0051  3464               	retlw	100	;'d'
   316  0052  3465               	retlw	101	;'e'
   317  0053  3473               	retlw	115	;'s'
   318  0054  3470               	retlw	112	;'p'
   319  0055  346C               	retlw	108	;'l'
   320  0056  3465               	retlw	101	;'e'
   321  0057  3467               	retlw	103	;'g'
   322  0058  3461               	retlw	97	;'a'
   323  0059  3472               	retlw	114	;'r'
   324  005A  3420               	retlw	32	;' '
   325  005B  3465               	retlw	101	;'e'
   326  005C  346E               	retlw	110	;'n'
   327  005D  3420               	retlw	32	;' '
   328  005E  3450               	retlw	80	;'P'
   329  005F  344F               	retlw	79	;'O'
   330  0060  3452               	retlw	82	;'R'
   331  0061  3454               	retlw	84	;'T'
   332  0062  3442               	retlw	66	;'B'
   333  0063  343A               	retlw	58	;':'
   334  0064  3420               	retlw	32	;' '
   335  0065  340D               	retlw	13
   336  0066  3400               	retlw	0
   337  0067                     STR_2:
   338  0067  3420               	retlw	32	;' '
   339  0068  3431               	retlw	49	;'1'
   340  0069  342E               	retlw	46	;'.'
   341  006A  3420               	retlw	32	;' '
   342  006B  3444               	retlw	68	;'D'
   343  006C  3465               	retlw	101	;'e'
   344  006D  3473               	retlw	115	;'s'
   345  006E  3470               	retlw	112	;'p'
   346  006F  346C               	retlw	108	;'l'
   347  0070  3465               	retlw	101	;'e'
   348  0071  3467               	retlw	103	;'g'
   349  0072  3461               	retlw	97	;'a'
   350  0073  3472               	retlw	114	;'r'
   351  0074  3420               	retlw	32	;' '
   352  0075  3463               	retlw	99	;'c'
   353  0076  3461               	retlw	97	;'a'
   354  0077  3464               	retlw	100	;'d'
   355  0078  3465               	retlw	101	;'e'
   356  0079  346E               	retlw	110	;'n'
   357  007A  3461               	retlw	97	;'a'
   358  007B  3420               	retlw	32	;' '
   359  007C  3464               	retlw	100	;'d'
   360  007D  3465               	retlw	101	;'e'
   361  007E  3420               	retlw	32	;' '
   362  007F  3463               	retlw	99	;'c'
   363  0080  3461               	retlw	97	;'a'
   364  0081  3472               	retlw	114	;'r'
   365  0082  3461               	retlw	97	;'a'
   366  0083  3463               	retlw	99	;'c'
   367  0084  3474               	retlw	116	;'t'
   368  0085  3465               	retlw	101	;'e'
   369  0086  3472               	retlw	114	;'r'
   370  0087  3465               	retlw	101	;'e'
   371  0088  3473               	retlw	115	;'s'
   372  0089  3420               	retlw	32	;' '
   373  008A  340D               	retlw	13
   374  008B  3400               	retlw	0
   375  008C                     STR_1:
   376  008C  340D               	retlw	13
   377  008D  3420               	retlw	32	;' '
   378  008E  3445               	retlw	69	;'E'
   379  008F  346C               	retlw	108	;'l'
   380  0090  3469               	retlw	105	;'i'
   381  0091  346A               	retlw	106	;'j'
   382  0092  3461               	retlw	97	;'a'
   383  0093  3420               	retlw	32	;' '
   384  0094  3475               	retlw	117	;'u'
   385  0095  346E               	retlw	110	;'n'
   386  0096  3461               	retlw	97	;'a'
   387  0097  3420               	retlw	32	;' '
   388  0098  346F               	retlw	111	;'o'
   389  0099  3470               	retlw	112	;'p'
   390  009A  3463               	retlw	99	;'c'
   391  009B  3469               	retlw	105	;'i'
   392  009C  346F               	retlw	111	;'o'
   393  009D  346E               	retlw	110	;'n'
   394  009E  343A               	retlw	58	;':'
   395  009F  3420               	retlw	32	;' '
   396  00A0  340D               	retlw	13
   397  00A1  3400               	retlw	0
   398  00A2                     STR_3:
   399  00A2  3420               	retlw	32	;' '
   400  00A3  3432               	retlw	50	;'2'
   401  00A4  342E               	retlw	46	;'.'
   402  00A5  3420               	retlw	32	;' '
   403  00A6  3443               	retlw	67	;'C'
   404  00A7  3461               	retlw	97	;'a'
   405  00A8  346D               	retlw	109	;'m'
   406  00A9  3462               	retlw	98	;'b'
   407  00AA  3469               	retlw	105	;'i'
   408  00AB  3461               	retlw	97	;'a'
   409  00AC  3472               	retlw	114	;'r'
   410  00AD  3420               	retlw	32	;' '
   411  00AE  3450               	retlw	80	;'P'
   412  00AF  344F               	retlw	79	;'O'
   413  00B0  3452               	retlw	82	;'R'
   414  00B1  3454               	retlw	84	;'T'
   415  00B2  3441               	retlw	65	;'A'
   416  00B3  3420               	retlw	32	;' '
   417  00B4  340D               	retlw	13
   418  00B5  3400               	retlw	0
   419  00B6                     STR_4:
   420  00B6  3420               	retlw	32	;' '
   421  00B7  3433               	retlw	51	;'3'
   422  00B8  342E               	retlw	46	;'.'
   423  00B9  3420               	retlw	32	;' '
   424  00BA  3443               	retlw	67	;'C'
   425  00BB  3461               	retlw	97	;'a'
   426  00BC  346D               	retlw	109	;'m'
   427  00BD  3462               	retlw	98	;'b'
   428  00BE  3469               	retlw	105	;'i'
   429  00BF  3461               	retlw	97	;'a'
   430  00C0  3472               	retlw	114	;'r'
   431  00C1  3420               	retlw	32	;' '
   432  00C2  3450               	retlw	80	;'P'
   433  00C3  344F               	retlw	79	;'O'
   434  00C4  3452               	retlw	82	;'R'
   435  00C5  3454               	retlw	84	;'T'
   436  00C6  3442               	retlw	66	;'B'
   437  00C7  3420               	retlw	32	;' '
   438  00C8  340D               	retlw	13
   439  00C9  3400               	retlw	0
   440  00CA                     STR_5:
   441  00CA  340D               	retlw	13
   442  00CB  3420               	retlw	32	;' '
   443  00CC  3454               	retlw	84	;'T'
   444  00CD  3441               	retlw	65	;'A'
   445  00CE  3420               	retlw	32	;' '
   446  00CF  3454               	retlw	84	;'T'
   447  00D0  344F               	retlw	79	;'O'
   448  00D1  3444               	retlw	68	;'D'
   449  00D2  344F               	retlw	79	;'O'
   450  00D3  3420               	retlw	32	;' '
   451  00D4  3442               	retlw	66	;'B'
   452  00D5  3449               	retlw	73	;'I'
   453  00D6  3445               	retlw	69	;'E'
   454  00D7  344E               	retlw	78	;'N'
   455  00D8  3420               	retlw	32	;' '
   456  00D9  340D               	retlw	13
   457  00DA  3400               	retlw	0
   458                           
   459                           	psect	cinit
   460  07FC                     start_initialization:	
   461                           ; #config settings
   462                           
   463  07FC                     __initialization:
   464  07FC                     end_of_initialization:	
   465                           ;End of C runtime variable initialization code
   466                           
   467  07FC                     __end_of__initialization:
   468  07FC  0183               	clrf	3
   469  07FD  120A  118A  2F0C   	ljmp	_main	;jump to C main() function
   470                           
   471                           	psect	cstackCOMMON
   472  0070                     __pcstackCOMMON:
   473  0070                     ?_setup:
   474  0070                     ??_setup:	
   475                           ; 1 bytes @ 0x0
   476                           
   477  0070                     ?_text:	
   478                           ; 1 bytes @ 0x0
   479                           
   480  0070                     ?_main:	
   481                           ; 1 bytes @ 0x0
   482                           
   483  0070                     ?_putch:	
   484                           ; 1 bytes @ 0x0
   485                           
   486  0070                     ??_putch:	
   487                           ; 1 bytes @ 0x0
   488                           
   489  0070                     ?_printf:	
   490                           ; 1 bytes @ 0x0
   491                           
   492  0070                     putch@data:	
   493                           ; 2 bytes @ 0x0
   494                           
   495                           
   496                           ; 1 bytes @ 0x0
   497  0070                     	ds	1
   498  0071                     ??_printf:
   499                           
   500                           ; 1 bytes @ 0x1
   501  0071                     	ds	1
   502  0072                     printf@ap:
   503                           
   504                           ; 1 bytes @ 0x2
   505  0072                     	ds	1
   506  0073                     printf@c:
   507                           
   508                           ; 1 bytes @ 0x3
   509  0073                     	ds	1
   510  0074                     printf@f:
   511                           
   512                           ; 1 bytes @ 0x4
   513  0074                     	ds	1
   514  0075                     ??_text:
   515                           
   516                           ; 1 bytes @ 0x5
   517  0075                     	ds	3
   518  0078                     ??_main:
   519                           
   520                           	psect	maintext
   521  070C                     __pmaintext:	
   522                           ; 1 bytes @ 0x8
   523 ;;
   524 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   525 ;;
   526 ;; *************** function _main *****************
   527 ;; Defined at:
   528 ;;		line 49 in file "lab10.c"
   529 ;; Parameters:    Size  Location     Type
   530 ;;		None
   531 ;; Auto vars:     Size  Location     Type
   532 ;;		None
   533 ;; Return value:  Size  Location     Type
   534 ;;                  1    wreg      void 
   535 ;; Registers used:
   536 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   537 ;; Tracked objects:
   538 ;;		On entry : B00/0
   539 ;;		On exit  : 0/0
   540 ;;		Unchanged: 0/0
   541 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   542 ;;      Params:         0       0       0       0       0
   543 ;;      Locals:         0       0       0       0       0
   544 ;;      Temps:          0       0       0       0       0
   545 ;;      Totals:         0       0       0       0       0
   546 ;;Total ram usage:        0 bytes
   547 ;; Hardware stack levels required when called:    3
   548 ;; This function calls:
   549 ;;		_setup
   550 ;;		_text
   551 ;; This function is called by:
   552 ;;		Startup code after reset
   553 ;; This function uses a non-reentrant model
   554 ;;
   555                           
   556                           
   557                           ;psect for function _main
   558  070C                     _main:
   559  070C                     l803:	
   560                           ;incstack = 0
   561                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   562                           
   563                           
   564                           ;lab10.c: 50:     setup();
   565  070C  120A  118A  2739  120A  118A  	fcall	_setup
   566  0711                     l805:
   567                           
   568                           ;lab10.c: 52:         text();}
   569  0711  120A  118A  2766  120A  118A  	fcall	_text
   570  0716  2F11               	goto	l805
   571  0717  120A  118A  2800   	ljmp	start
   572  071A                     __end_of_main:
   573                           
   574                           	psect	text1
   575  0766                     __ptext1:	
   576 ;; *************** function _text *****************
   577 ;; Defined at:
   578 ;;		line 63 in file "lab10.c"
   579 ;; Parameters:    Size  Location     Type
   580 ;;		None
   581 ;; Auto vars:     Size  Location     Type
   582 ;;		None
   583 ;; Return value:  Size  Location     Type
   584 ;;                  1    wreg      void 
   585 ;; Registers used:
   586 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   587 ;; Tracked objects:
   588 ;;		On entry : 0/0
   589 ;;		On exit  : 0/0
   590 ;;		Unchanged: 0/0
   591 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   592 ;;      Params:         0       0       0       0       0
   593 ;;      Locals:         0       0       0       0       0
   594 ;;      Temps:          3       0       0       0       0
   595 ;;      Totals:         3       0       0       0       0
   596 ;;Total ram usage:        3 bytes
   597 ;; Hardware stack levels used:    1
   598 ;; Hardware stack levels required when called:    2
   599 ;; This function calls:
   600 ;;		_printf
   601 ;; This function is called by:
   602 ;;		_main
   603 ;; This function uses a non-reentrant model
   604 ;;
   605                           
   606                           
   607                           ;psect for function _text
   608  0766                     _text:
   609  0766                     l773:	
   610                           ;incstack = 0
   611                           ; Regs used in _text: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   612                           
   613                           
   614                           ;lab10.c: 64:     _delay((unsigned long)((250)*(8000000/4000.0)));
   615  0766  3003               	movlw	3
   616  0767  00F7               	movwf	??_text+2
   617  0768  308A               	movlw	138
   618  0769  00F6               	movwf	??_text+1
   619  076A  3055               	movlw	85
   620  076B  00F5               	movwf	??_text
   621  076C                     u167:
   622  076C  0BF5               	decfsz	??_text,f
   623  076D  2F6C               	goto	u167
   624  076E  0BF6               	decfsz	??_text+1,f
   625  076F  2F6C               	goto	u167
   626  0770  0BF7               	decfsz	??_text+2,f
   627  0771  2F6C               	goto	u167
   628  0772  2F73               	nop2
   629  0773                     l775:
   630                           
   631                           ;lab10.c: 65:     printf("\r Elija una opcion: \r");
   632  0773  3084               	movlw	(low ((STR_1-__stringbase)| (0+32768)))& (0+255)
   633  0774  120A  118A  271A  120A  118A  	fcall	_printf
   634  0779                     l777:
   635                           
   636                           ;lab10.c: 66:     _delay((unsigned long)((250)*(8000000/4000.0)));
   637  0779  3003               	movlw	3
   638  077A  00F7               	movwf	??_text+2
   639  077B  308A               	movlw	138
   640  077C  00F6               	movwf	??_text+1
   641  077D  3055               	movlw	85
   642  077E  00F5               	movwf	??_text
   643  077F                     u177:
   644  077F  0BF5               	decfsz	??_text,f
   645  0780  2F7F               	goto	u177
   646  0781  0BF6               	decfsz	??_text+1,f
   647  0782  2F7F               	goto	u177
   648  0783  0BF7               	decfsz	??_text+2,f
   649  0784  2F7F               	goto	u177
   650  0785  2F86               	nop2
   651                           
   652                           ;lab10.c: 67:     printf(" 1. Desplegar cadena de caracteres \r");
   653  0786  305F               	movlw	(low ((STR_2-__stringbase)| (0+32768)))& (0+255)
   654  0787  120A  118A  271A  120A  118A  	fcall	_printf
   655  078C                     l779:
   656                           
   657                           ;lab10.c: 68:     _delay((unsigned long)((250)*(8000000/4000.0)));
   658  078C  3003               	movlw	3
   659  078D  00F7               	movwf	??_text+2
   660  078E  308A               	movlw	138
   661  078F  00F6               	movwf	??_text+1
   662  0790  3055               	movlw	85
   663  0791  00F5               	movwf	??_text
   664  0792                     u187:
   665  0792  0BF5               	decfsz	??_text,f
   666  0793  2F92               	goto	u187
   667  0794  0BF6               	decfsz	??_text+1,f
   668  0795  2F92               	goto	u187
   669  0796  0BF7               	decfsz	??_text+2,f
   670  0797  2F92               	goto	u187
   671  0798  2F99               	nop2
   672  0799                     l781:
   673                           
   674                           ;lab10.c: 69:     printf(" 2. Cambiar PORTA \r");
   675  0799  309A               	movlw	(low ((STR_3-__stringbase)| (0+32768)))& (0+255)
   676  079A  120A  118A  271A  120A  118A  	fcall	_printf
   677                           
   678                           ;lab10.c: 70:     _delay((unsigned long)((250)*(8000000/4000.0)));
   679  079F  3003               	movlw	3
   680  07A0  00F7               	movwf	??_text+2
   681  07A1  308A               	movlw	138
   682  07A2  00F6               	movwf	??_text+1
   683  07A3  3055               	movlw	85
   684  07A4  00F5               	movwf	??_text
   685  07A5                     u197:
   686  07A5  0BF5               	decfsz	??_text,f
   687  07A6  2FA5               	goto	u197
   688  07A7  0BF6               	decfsz	??_text+1,f
   689  07A8  2FA5               	goto	u197
   690  07A9  0BF7               	decfsz	??_text+2,f
   691  07AA  2FA5               	goto	u197
   692  07AB  2FAC               	nop2
   693  07AC                     l783:
   694                           
   695                           ;lab10.c: 71:     printf(" 3. Cambiar PORTB \r");
   696  07AC  30AE               	movlw	(low ((STR_4-__stringbase)| (0+32768)))& (0+255)
   697  07AD  120A  118A  271A  120A  118A  	fcall	_printf
   698  07B2                     l63:	
   699                           ;lab10.c: 73:     while (RCIF == 0);
   700                           
   701  07B2  1283               	bcf	3,5	;RP0=0, select bank0
   702  07B3  1303               	bcf	3,6	;RP1=0, select bank0
   703  07B4  1E8C               	btfss	12,5	;volatile
   704  07B5  2FB7               	goto	u101
   705  07B6  2FB8               	goto	u100
   706  07B7                     u101:
   707  07B7  2FB2               	goto	l63
   708  07B8                     u100:
   709  07B8                     l785:
   710                           
   711                           ;lab10.c: 74:     if (RCREG == '1'){
   712  07B8  3031               	movlw	49
   713  07B9  061A               	xorwf	26,w	;volatile
   714  07BA  1D03               	btfss	3,2
   715  07BB  2FBD               	goto	u111
   716  07BC  2FBE               	goto	u110
   717  07BD                     u111:
   718  07BD  2FD1               	goto	l791
   719  07BE                     u110:
   720  07BE                     l787:
   721                           
   722                           ;lab10.c: 75:         _delay((unsigned long)((500)*(8000000/4000.0)));
   723  07BE  3006               	movlw	6
   724  07BF  00F7               	movwf	??_text+2
   725  07C0  3013               	movlw	19
   726  07C1  00F6               	movwf	??_text+1
   727  07C2  30AD               	movlw	173
   728  07C3  00F5               	movwf	??_text
   729  07C4                     u207:
   730  07C4  0BF5               	decfsz	??_text,f
   731  07C5  2FC4               	goto	u207
   732  07C6  0BF6               	decfsz	??_text+1,f
   733  07C7  2FC4               	goto	u207
   734  07C8  0BF7               	decfsz	??_text+2,f
   735  07C9  2FC4               	goto	u207
   736  07CA  2FCB               	nop2
   737  07CB                     l789:
   738                           
   739                           ;lab10.c: 76:         printf("\r TA TODO BIEN \r");
   740  07CB  30C2               	movlw	(low ((STR_5-__stringbase)| (0+32768)))& (0+255)
   741  07CC  120A  118A  271A  120A  118A  	fcall	_printf
   742  07D1                     l791:
   743                           
   744                           ;lab10.c: 78:     if (RCREG == '2'){
   745  07D1  3032               	movlw	50
   746  07D2  1283               	bcf	3,5	;RP0=0, select bank0
   747  07D3  1303               	bcf	3,6	;RP1=0, select bank0
   748  07D4  061A               	xorwf	26,w	;volatile
   749  07D5  1D03               	btfss	3,2
   750  07D6  2FD8               	goto	u121
   751  07D7  2FD9               	goto	u120
   752  07D8                     u121:
   753  07D8  2FE7               	goto	l797
   754  07D9                     u120:
   755  07D9                     l793:
   756                           
   757                           ;lab10.c: 79:         printf("\r Insertar caracter para desplegar en PORTA: \r");
   758  07D9  3001               	movlw	(low ((STR_6-__stringbase)| (0+32768)))& (0+255)
   759  07DA  120A  118A  271A  120A  118A  	fcall	_printf
   760  07DF                     l68:	
   761                           ;lab10.c: 80:         while (RCIF == 0);
   762                           
   763  07DF  1283               	bcf	3,5	;RP0=0, select bank0
   764  07E0  1303               	bcf	3,6	;RP1=0, select bank0
   765  07E1  1E8C               	btfss	12,5	;volatile
   766  07E2  2FE4               	goto	u131
   767  07E3  2FE5               	goto	u130
   768  07E4                     u131:
   769  07E4  2FDF               	goto	l68
   770  07E5                     u130:
   771  07E5                     l795:
   772                           
   773                           ;lab10.c: 81:         PORTA = RCREG;
   774  07E5  081A               	movf	26,w	;volatile
   775  07E6  0085               	movwf	5	;volatile
   776  07E7                     l797:
   777                           
   778                           ;lab10.c: 83:     if (RCREG == '3'){
   779  07E7  3033               	movlw	51
   780  07E8  061A               	xorwf	26,w	;volatile
   781  07E9  1D03               	btfss	3,2
   782  07EA  2FEC               	goto	u141
   783  07EB  2FED               	goto	u140
   784  07EC                     u141:
   785  07EC  2FFB               	goto	l76
   786  07ED                     u140:
   787  07ED                     l799:
   788                           
   789                           ;lab10.c: 84:         printf("\r Insertar caracter para desplegar en PORTB: \r");
   790  07ED  3030               	movlw	(low ((STR_7-__stringbase)| (0+32768)))& (0+255)
   791  07EE  120A  118A  271A  120A  118A  	fcall	_printf
   792  07F3                     l72:	
   793                           ;lab10.c: 85:         while (RCIF == 0);
   794                           
   795  07F3  1283               	bcf	3,5	;RP0=0, select bank0
   796  07F4  1303               	bcf	3,6	;RP1=0, select bank0
   797  07F5  1E8C               	btfss	12,5	;volatile
   798  07F6  2FF8               	goto	u151
   799  07F7  2FF9               	goto	u150
   800  07F8                     u151:
   801  07F8  2FF3               	goto	l72
   802  07F9                     u150:
   803  07F9                     l801:
   804                           
   805                           ;lab10.c: 86:         PORTB = RCREG;
   806  07F9  081A               	movf	26,w	;volatile
   807  07FA  0086               	movwf	6	;volatile
   808  07FB                     l76:	
   809                           ;lab10.c: 87:     }
   810                           
   811  07FB  0008               	return
   812  07FC                     __end_of_text:
   813                           
   814                           	psect	text2
   815  071A                     __ptext2:	
   816 ;; *************** function _printf *****************
   817 ;; Defined at:
   818 ;;		line 477 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c"
   819 ;; Parameters:    Size  Location     Type
   820 ;;  f               1    wreg     PTR const unsigned char 
   821 ;;		 -> STR_7(47), STR_6(47), STR_5(17), STR_4(20), 
   822 ;;		 -> STR_3(20), STR_2(37), STR_1(22), 
   823 ;; Auto vars:     Size  Location     Type
   824 ;;  f               1    4[COMMON] PTR const unsigned char 
   825 ;;		 -> STR_7(47), STR_6(47), STR_5(17), STR_4(20), 
   826 ;;		 -> STR_3(20), STR_2(37), STR_1(22), 
   827 ;;  tmpval          4    0        struct .
   828 ;;  cp              2    0        PTR const unsigned char 
   829 ;;  len             2    0        unsigned int 
   830 ;;  val             2    0        unsigned int 
   831 ;;  c               1    3[COMMON] unsigned char 
   832 ;;  ap              1    2[COMMON] PTR void [1]
   833 ;;		 -> ?_printf(2), 
   834 ;;  flag            1    0        unsigned char 
   835 ;;  prec            1    0        char 
   836 ;; Return value:  Size  Location     Type
   837 ;;                  2   12[None  ] int 
   838 ;; Registers used:
   839 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   840 ;; Tracked objects:
   841 ;;		On entry : 0/0
   842 ;;		On exit  : 0/0
   843 ;;		Unchanged: 0/0
   844 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   845 ;;      Params:         0       0       0       0       0
   846 ;;      Locals:         3       0       0       0       0
   847 ;;      Temps:          1       0       0       0       0
   848 ;;      Totals:         4       0       0       0       0
   849 ;;Total ram usage:        4 bytes
   850 ;; Hardware stack levels used:    1
   851 ;; Hardware stack levels required when called:    1
   852 ;; This function calls:
   853 ;;		_putch
   854 ;; This function is called by:
   855 ;;		_text
   856 ;; This function uses a non-reentrant model
   857 ;;
   858                           
   859                           
   860                           ;psect for function _printf
   861  071A                     _printf:
   862                           
   863                           ;incstack = 0
   864                           ; Regs used in _printf: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   865                           ;printf@f stored from wreg
   866  071A  00F4               	movwf	printf@f
   867  071B                     l767:
   868                           
   869                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 477: printf(const
      +                           char * f, ...);C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 47
      +                          8: {;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 479:  va_list
      +                           ap;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 512:  char c;
      +                          ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 521:  signed char
      +                           prec;;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 525:  unsig
      +                          ned char flag;
   870  071B  3070               	movlw	(low (?_printf| 0))& (0+255)
   871  071C  00F1               	movwf	??_printf
   872  071D  0871               	movf	??_printf,w
   873  071E  00F2               	movwf	printf@ap
   874                           
   875                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   876  071F  2F26               	goto	l771
   877  0720                     l769:
   878                           
   879                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 557:   {;C:\Progr
      +                          am Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 558:    (putch(c) );
   880  0720  0873               	movf	printf@c,w
   881  0721  120A  118A  2702  120A  118A  	fcall	_putch
   882  0726                     l771:	
   883                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 559:    continue;
   884                           
   885                           
   886                           ;C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\doprnt.c: 553:  while((c = 
      +                          *f++)) {
   887  0726  3001               	movlw	1
   888  0727  07F4               	addwf	printf@f,f
   889  0728  30FF               	movlw	-1
   890  0729  0774               	addwf	printf@f,w
   891  072A  0084               	movwf	4
   892  072B  120A  118A  2003  120A  118A  	fcall	stringdir
   893  0730  00F1               	movwf	??_printf
   894  0731  0871               	movf	??_printf,w
   895  0732  00F3               	movwf	printf@c
   896  0733  0873               	movf	printf@c,w
   897  0734  1D03               	btfss	3,2
   898  0735  2F37               	goto	u91
   899  0736  2F38               	goto	u90
   900  0737                     u91:
   901  0737  2F20               	goto	l769
   902  0738                     u90:
   903  0738                     l171:
   904  0738  0008               	return
   905  0739                     __end_of_printf:
   906                           
   907                           	psect	text3
   908  0702                     __ptext3:	
   909 ;; *************** function _putch *****************
   910 ;; Defined at:
   911 ;;		line 56 in file "lab10.c"
   912 ;; Parameters:    Size  Location     Type
   913 ;;  data            1    wreg     unsigned char 
   914 ;; Auto vars:     Size  Location     Type
   915 ;;  data            1    0[COMMON] unsigned char 
   916 ;; Return value:  Size  Location     Type
   917 ;;                  1    wreg      void 
   918 ;; Registers used:
   919 ;;		wreg
   920 ;; Tracked objects:
   921 ;;		On entry : 0/0
   922 ;;		On exit  : 0/0
   923 ;;		Unchanged: 0/0
   924 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   925 ;;      Params:         0       0       0       0       0
   926 ;;      Locals:         1       0       0       0       0
   927 ;;      Temps:          0       0       0       0       0
   928 ;;      Totals:         1       0       0       0       0
   929 ;;Total ram usage:        1 bytes
   930 ;; Hardware stack levels used:    1
   931 ;; This function calls:
   932 ;;		Nothing
   933 ;; This function is called by:
   934 ;;		_printf
   935 ;; This function uses a non-reentrant model
   936 ;;
   937                           
   938                           
   939                           ;psect for function _putch
   940  0702                     _putch:
   941                           
   942                           ;incstack = 0
   943                           ; Regs used in _putch: [wreg]
   944                           ;putch@data stored from wreg
   945  0702  00F0               	movwf	putch@data
   946  0703                     l681:
   947  0703                     l57:	
   948                           ;lab10.c: 57:     while(TXIF == 0);
   949                           
   950  0703  1283               	bcf	3,5	;RP0=0, select bank0
   951  0704  1303               	bcf	3,6	;RP1=0, select bank0
   952  0705  1E0C               	btfss	12,4	;volatile
   953  0706  2F08               	goto	u11
   954  0707  2F09               	goto	u10
   955  0708                     u11:
   956  0708  2F03               	goto	l57
   957  0709                     u10:
   958  0709                     l683:
   959                           
   960                           ;lab10.c: 58:     TXREG = data;
   961  0709  0870               	movf	putch@data,w
   962  070A  0099               	movwf	25	;volatile
   963  070B                     l60:
   964  070B  0008               	return
   965  070C                     __end_of_putch:
   966                           
   967                           	psect	text4
   968  0739                     __ptext4:	
   969 ;; *************** function _setup *****************
   970 ;; Defined at:
   971 ;;		line 95 in file "lab10.c"
   972 ;; Parameters:    Size  Location     Type
   973 ;;		None
   974 ;; Auto vars:     Size  Location     Type
   975 ;;		None
   976 ;; Return value:  Size  Location     Type
   977 ;;                  1    wreg      void 
   978 ;; Registers used:
   979 ;;		wreg, status,2
   980 ;; Tracked objects:
   981 ;;		On entry : 0/0
   982 ;;		On exit  : 0/0
   983 ;;		Unchanged: 0/0
   984 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   985 ;;      Params:         0       0       0       0       0
   986 ;;      Locals:         0       0       0       0       0
   987 ;;      Temps:          0       0       0       0       0
   988 ;;      Totals:         0       0       0       0       0
   989 ;;Total ram usage:        0 bytes
   990 ;; Hardware stack levels used:    1
   991 ;; This function calls:
   992 ;;		Nothing
   993 ;; This function is called by:
   994 ;;		_main
   995 ;; This function uses a non-reentrant model
   996 ;;
   997                           
   998                           
   999                           ;psect for function _setup
  1000  0739                     _setup:
  1001  0739                     l693:	
  1002                           ;incstack = 0
  1003                           ; Regs used in _setup: [wreg+status,2]
  1004                           
  1005                           
  1006                           ;lab10.c: 98:     ANSEL = 0;
  1007  0739  1683               	bsf	3,5	;RP0=1, select bank3
  1008  073A  1703               	bsf	3,6	;RP1=1, select bank3
  1009  073B  0188               	clrf	8	;volatile
  1010                           
  1011                           ;lab10.c: 99:     ANSELH = 0;
  1012  073C  0189               	clrf	9	;volatile
  1013                           
  1014                           ;lab10.c: 102:     TRISA = 0x0;
  1015  073D  1683               	bsf	3,5	;RP0=1, select bank1
  1016  073E  1303               	bcf	3,6	;RP1=0, select bank1
  1017  073F  0185               	clrf	5	;volatile
  1018                           
  1019                           ;lab10.c: 103:     TRISB = 0x0;
  1020  0740  0186               	clrf	6	;volatile
  1021                           
  1022                           ;lab10.c: 106:     PORTA = 0x00;
  1023  0741  1283               	bcf	3,5	;RP0=0, select bank0
  1024  0742  1303               	bcf	3,6	;RP1=0, select bank0
  1025  0743  0185               	clrf	5	;volatile
  1026                           
  1027                           ;lab10.c: 107:     PORTB = 0x00;
  1028  0744  0186               	clrf	6	;volatile
  1029  0745                     l695:
  1030                           
  1031                           ;lab10.c: 110:     OSCCONbits.IRCF2 = 1;
  1032  0745  1683               	bsf	3,5	;RP0=1, select bank1
  1033  0746  1303               	bcf	3,6	;RP1=0, select bank1
  1034  0747  170F               	bsf	15,6	;volatile
  1035  0748                     l697:
  1036                           
  1037                           ;lab10.c: 111:     OSCCONbits.IRCF1 = 1;
  1038  0748  168F               	bsf	15,5	;volatile
  1039  0749                     l699:
  1040                           
  1041                           ;lab10.c: 112:     OSCCONbits.IRCF0 = 1;
  1042  0749  160F               	bsf	15,4	;volatile
  1043  074A                     l701:
  1044                           
  1045                           ;lab10.c: 113:     OSCCONbits.SCS = 1;
  1046  074A  140F               	bsf	15,0	;volatile
  1047  074B                     l703:
  1048                           
  1049                           ;lab10.c: 116:     INTCONbits.GIE = 1;
  1050  074B  178B               	bsf	11,7	;volatile
  1051  074C                     l705:
  1052                           
  1053                           ;lab10.c: 117:     INTCONbits.PEIE = 1;
  1054  074C  170B               	bsf	11,6	;volatile
  1055  074D                     l707:
  1056                           
  1057                           ;lab10.c: 118:     PIE1bits.RCIE = 1;
  1058  074D  168C               	bsf	12,5	;volatile
  1059  074E                     l709:
  1060                           
  1061                           ;lab10.c: 119:     PIE1bits.TXIE = 1;
  1062  074E  160C               	bsf	12,4	;volatile
  1063  074F                     l711:
  1064                           
  1065                           ;lab10.c: 123:     TXSTAbits.SYNC = 0;
  1066  074F  1218               	bcf	24,4	;volatile
  1067  0750                     l713:
  1068                           
  1069                           ;lab10.c: 124:     TXSTAbits.BRGH = 1;
  1070  0750  1518               	bsf	24,2	;volatile
  1071  0751                     l715:
  1072                           
  1073                           ;lab10.c: 125:     BAUDCTLbits.BRG16 = 1;
  1074  0751  1683               	bsf	3,5	;RP0=1, select bank3
  1075  0752  1703               	bsf	3,6	;RP1=1, select bank3
  1076  0753  1587               	bsf	7,3	;volatile
  1077  0754                     l717:
  1078                           
  1079                           ;lab10.c: 127:     SPBRG = 208;
  1080  0754  30D0               	movlw	208
  1081  0755  1683               	bsf	3,5	;RP0=1, select bank1
  1082  0756  1303               	bcf	3,6	;RP1=0, select bank1
  1083  0757  0099               	movwf	25	;volatile
  1084  0758                     l719:
  1085                           
  1086                           ;lab10.c: 128:     SPBRGH = 0;
  1087  0758  019A               	clrf	26	;volatile
  1088  0759                     l721:
  1089                           
  1090                           ;lab10.c: 130:     RCSTAbits.SPEN = 1;
  1091  0759  1283               	bcf	3,5	;RP0=0, select bank0
  1092  075A  1303               	bcf	3,6	;RP1=0, select bank0
  1093  075B  1798               	bsf	24,7	;volatile
  1094  075C                     l723:
  1095                           
  1096                           ;lab10.c: 131:     RCSTAbits.RX9 = 0;
  1097  075C  1318               	bcf	24,6	;volatile
  1098  075D                     l725:
  1099                           
  1100                           ;lab10.c: 132:     RCSTAbits.CREN = 1;
  1101  075D  1618               	bsf	24,4	;volatile
  1102  075E                     l727:
  1103                           
  1104                           ;lab10.c: 134:     TXSTAbits.TXEN = 1;
  1105  075E  1683               	bsf	3,5	;RP0=1, select bank1
  1106  075F  1303               	bcf	3,6	;RP1=0, select bank1
  1107  0760  1698               	bsf	24,5	;volatile
  1108  0761                     l729:
  1109                           
  1110                           ;lab10.c: 136:     PIR1bits.RCIF = 0;
  1111  0761  1283               	bcf	3,5	;RP0=0, select bank0
  1112  0762  1303               	bcf	3,6	;RP1=0, select bank0
  1113  0763  128C               	bcf	12,5	;volatile
  1114  0764                     l731:
  1115                           
  1116                           ;lab10.c: 137:     PIR1bits.TXIF = 0;
  1117  0764  120C               	bcf	12,4	;volatile
  1118  0765                     l79:
  1119  0765  0008               	return
  1120  0766                     __end_of_setup:
  1121  007E                     btemp	set	126	;btemp
  1122  007E                     wtemp0	set	126
  1123                           
  1124                           	psect	config
  1125                           
  1126                           ;Config register CONFIG1 @ 0x2007
  1127                           ;	Oscillator Selection bits
  1128                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1129                           ;	Watchdog Timer Enable bit
  1130                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1131                           ;	Power-up Timer Enable bit
  1132                           ;	PWRTE = OFF, PWRT disabled
  1133                           ;	RE3/MCLR pin function select bit
  1134                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1135                           ;	Code Protection bit
  1136                           ;	CP = OFF, Program memory code protection is disabled
  1137                           ;	Data Code Protection bit
  1138                           ;	CPD = OFF, Data memory code protection is disabled
  1139                           ;	Brown Out Reset Selection bits
  1140                           ;	BOREN = OFF, BOR disabled
  1141                           ;	Internal External Switchover bit
  1142                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1143                           ;	Fail-Safe Clock Monitor Enabled bit
  1144                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1145                           ;	Low Voltage Programming Enable bit
  1146                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1147                           ;	In-Circuit Debugger Mode bit
  1148                           ;	DEBUG = 0x1, unprogrammed default
  1149  2007                     	org	8199
  1150  2007  20D4               	dw	8404
  1151                           
  1152                           ;Config register CONFIG2 @ 0x2008
  1153                           ;	Brown-out Reset Selection bit
  1154                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1155                           ;	Flash Program Memory Self Write Enable bits
  1156                           ;	WRT = OFF, Write protection off
  1157  2008                     	org	8200
  1158  2008  3FFF               	dw	16383

Data Sizes:
    Strings     210
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      8       8
    BANK0            80      0       0
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    printf@f	PTR const unsigned char  size(1) Largest target is 47
		 -> STR_7(CODE[47]), STR_6(CODE[47]), STR_5(CODE[17]), STR_4(CODE[20]), 
		 -> STR_3(CODE[20]), STR_2(CODE[37]), STR_1(CODE[22]), 

    printf@ap	PTR void [1] size(1) Largest target is 2
		 -> ?_printf(COMMON[2]), 


Critical Paths under _main in COMMON

    _main->_text
    _text->_printf
    _printf->_putch

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0     292
                              _setup
                               _text
 ---------------------------------------------------------------------------------
 (1) _text                                                 3     3      0     292
                                              5 COMMON     3     3      0
                             _printf
 ---------------------------------------------------------------------------------
 (2) _printf                                              16    16      0     292
                                              1 COMMON     4     4      0
                              _putch
 ---------------------------------------------------------------------------------
 (3) _putch                                                1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _setup
   _text
     _printf
       _putch

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      8       8       1       57.1%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       0       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       0      12        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Sun May 09 20:01:13 2021

                      pc 0002                       l60 070B                       l63 07B2  
                     l72 07F3                       l57 0703                       l76 07FB  
                     l68 07DF                       l79 0765                       u10 0709  
                     u11 0708                       u90 0738                       u91 0737  
                     fsr 0004                      l171 0738                      l701 074A  
                    l711 074F                      l703 074B                      l721 0759  
                    l713 0750                      l705 074C                      l801 07F9  
                    l731 0764                      l723 075C                      l715 0751  
                    l707 074D                      l803 070C                      l725 075D  
                    l717 0754                      l709 074E                      l805 0711  
                    l727 075E                      l719 0758                      l729 0761  
                    l681 0703                      l683 0709                      l771 0726  
                    l693 0739                      l781 0799                      l773 0766  
                    l695 0745                      l767 071B                      l791 07D1  
                    l783 07AC                      l775 0773                      l697 0748  
                    l769 0720                      l793 07D9                      l785 07B8  
                    l777 0779                      l699 0749                      l795 07E5  
                    l787 07BE                      l779 078C                      l797 07E7  
                    l789 07CB                      l799 07ED                      u100 07B8  
                    u101 07B7                      u110 07BE                      u111 07BD  
                    u120 07D9                      u121 07D8                      u130 07E5  
                    u131 07E4                      u140 07ED                      u141 07EC  
                    u150 07F9                      u151 07F8                      u207 07C4  
                    u167 076C                      u177 077F                      u187 0792  
                    u197 07A5                      fsr0 0004                     STR_1 008C  
                   STR_2 0067                     STR_3 00A2                     STR_4 00B6  
                   STR_5 00CA                     STR_6 0009                     STR_7 0038  
                   _RCIF 0065                     _TXIF 0064                     _main 070C  
                   _text 0766                     btemp 007E                     start 0000  
                  ?_main 0070                    ?_text 0070                    _ANSEL 0188  
                  _RCREG 001A                    _SPBRG 0099                    _PORTA 0005  
                  _PORTB 0006                    _TRISA 0085                    _TRISB 0086  
                  _TXREG 0019                    _setup 0739                    _putch 0702  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 07FC             __end_of_main 071A             __end_of_text 07FC  
                 ??_main 0078                   ??_text 0075                   ?_setup 0070  
                 ?_putch 0070                   _ANSELH 0189                   _SPBRGH 009A  
                 _printf 071A  __end_of__initialization 07FC           __pcstackCOMMON 0070  
          __end_of_setup 0766            __end_of_putch 070C                  ??_setup 0070  
                ??_putch 0070               __pmaintext 070C                  ?_printf 0070  
             __stringtab 0003                  __ptext1 0766                  __ptext2 071A  
                __ptext3 0702                  __ptext4 0739          __size_of_printf 001F  
   end_of_initialization 07FC                _RCSTAbits 0018                  printf@c 0073  
                printf@f 0074                _TXSTAbits 0098              _BAUDCTLbits 0187  
         __end_of_printf 0739      start_initialization 07FC                 ??_printf 0071  
              ___latbits 0002                __pstrings 0003           __size_of_setup 002D  
         __size_of_putch 000A                 _PIE1bits 008C                 _PIR1bits 000C  
            __stringbase 0008       __end_of__stringtab 0009            __size_of_main 000E  
          __size_of_text 0096                putch@data 0070               _INTCONbits 000B  
              stringcode 0003               _OSCCONbits 008F                 printf@ap 0072  
               stringdir 0003                 stringtab 0003  
